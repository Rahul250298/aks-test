apiVersion: v1
kind: Service
metadata:
  name: test
  labels:
    app: myflask-app
spec:
  type: LoadBalancer  # Change to NodePort if you don't want a LoadBalancer
  selector:
    app: myflask-app
  ports:
    - protocol: TCP
      port: 80   # External port to expose
      targetPort: 5000  # Internal port on the container
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test
  labels:
    app: myflask-app
spec:
  replicas: 3  # Number of replicas/pods
  selector:
    matchLabels:
      app: myflask-app
  template:
    metadata:
      labels:
        app: myflask-app
    spec:
      containers:
      - name: myflask-app
        image: testpython.azurecr.io/java:#{Build.BuildId}#
        imagePullPolicy: Always
        ports:
        - containerPort: 5000  # The Flask app listens on port 80
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
